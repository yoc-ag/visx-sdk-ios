// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios12.1-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VisxSDK
import CoreLocation
import Foundation
import Swift
@_exported import VisxSDK
@objc @_inheritsConvenienceInitializers @objcMembers public class OmidManager : ObjectiveC.NSObject {
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VisxURLRequest : ObjectiveC.NSObject {
  @objc deinit
  @objc override dynamic public init()
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class VisxCommunication : ObjectiveC.NSObject, Foundation.URLSessionTaskDelegate {
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VisxRequestBuilder : ObjectiveC.NSObject {
  @objc deinit
  @objc override dynamic public init()
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class Mediation : ObjectiveC.NSObject {
  @objc final public let className: Swift.String?
  @objc final public let adunit: Swift.String?
  @objc final public let sizes: [[Foundation.NSNumber]]?
  @objc public var keywordTargeting: Swift.String
  @objc public var siteId: Swift.Int
  @objc public var pageId: Swift.Int
  @objc public var formatId: Swift.Int
  @objc deinit
  @objc override dynamic public init()
}
@objc public protocol FetchMediationDelegate {
  @objc func didReceive(_ mediations: [VisxSDK.Mediation])
  @objc func fetchingMediationFailed()
}
@objc public protocol LoadMediationDelegate {
  @objc func loadMediationAd(_ mediation: VisxSDK.Mediation, adView: VisxSDK.VisxAdView)
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class MediationManager : ObjectiveC.NSObject {
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VisxLocationService : ObjectiveC.NSObject, CoreLocation.CLLocationManagerDelegate {
  @objc public func locationManager(_ manager: CoreLocation.CLLocationManager, didChangeAuthorization status: CoreLocation.CLAuthorizationStatus)
  @objc public func locationManager(_ manager: CoreLocation.CLLocationManager, didFailWithError error: Swift.Error)
  @objc public func locationManager(_ manager: CoreLocation.CLLocationManager, didUpdateLocations locations: [CoreLocation.CLLocation])
  @objc deinit
  @objc override dynamic public init()
}
